####################################################
### Concept: X needs Y
####################################################

This concept is spatial.
When host says "_user needs"         host means "you need".
When host says "_user does not need" host means "you do not need".

###############################################################################
# Multiple singular additions
On "SUBJECT needs AND-LIST-THESE": #a cup of coffee and some biscuits
	perform "expand SUBJECT needs { THESE }";
	if not, reply "i do not understand";
	reply "ok, SUBJECT needs THESE".

###############################################################################
# GROUP additions - singular group
# martin and ruth need a coffee and a tea
On "AND-LIST-SUBJECTS need PHRASE-THESE":
	GROUPED-SUBJECTS needs THESE;
	reply "ok, SUBJECTS need THESE".

On "what do AND-LIST-SUBJECTS need":
	get GROUPED-SUBJECTS needs list;
	if not, reply "SUBJECTS do not need anything";
	reply "SUBJECTS need ...".

On "AND-LIST-SUBJECTS do not need PHRASE-THESE":
	THESE exists in GROUPED-SUBJECTS needs list;
	if not, reply "yes, i know";
	remove THESE from GROUPED-SUBJECTS needs list;
	reply "ok, SUBJECTS do not need ...".

On "AND-LIST-SUBJECTS do not need anything":
	remove everything from GROUPED-SUBJECTS needs list;
	reply "ok, SUBJECTS do not need anything [LOCATOR LOCATION]".

###############################################################################
# Combinations - multiple single subjects, phrased objects
# martin and james and ruth all need a coffee and a tea.
On "AND-LIST-SUBJECTS all need PHRASE-THESE":
	perform "expand { SUBJECTS } needs THESE";
	if not, reply "i do not understand";
	reply "ok, SUBJECTS all need THESE".

# martin and ruth both need a coffee and a tea.
On "AND-LIST-SUBJECTS both need PHRASE-THESE":
	SUBJECTS all need THESE;
	reply "ok, SUBJECTS both need THESE".

###############################################################################
# Various singular additions
On "SUBJECT needs PHRASE-THESE":
	THESE exists in SUBJECT needs list;
	reply "yes, i know";
	if not, add THESE to SUBJECT needs list;
	if not, append THESE onto SUBJECT needs list;
	reply "ok, SUBJECT needs ...".

On "SUBJECT needs NUMERIC-QUANTITY PHRASE-THIS":
	QUANTITY THIS exists in SUBJECT needs list;
	reply "yes, i know";
	if not, add QUANTITY THIS to SUBJECT needs list;
	reply "ok, SUBJECT needs ... ".

On "SUBJECT needs NUMERIC-QUANTITY UNIT of PHRASE-THIS":
	QUANTITY UNIT of THIS exists in SUBJECT needs list;
	reply "yes, i know";
	if not, add QUANTITY UNIT of THIS to SUBJECT needs list;
	reply "ok, SUBJECT needs ...".

## Elaboration of subsequent utterances
On "and NUMERIC-QUANTITY":
	SUBJECT needs QUANTITY THIS;
	reply "ok, SUBJECT needs ...".

On "and NUMERIC-QUANTITY THIS":
	SUBJECT needs QUANTITY THIS;
	reply "ok, SUBJECT needs ...".

On "and NUMERIC-QUANTITY UNITS of PHRASE-THIS":
	SUBJECT needs QUANTITY UNITS of THIS;
	reply "ok, SUBJECT needs ...".

###### Pronoun ancillaries - it is/they are from X #######
On "the PHRASE-THIS is": #  LOCATOR LOCATION are implied anyway!
	perform "items update SUBJECT needs THIS";
	reply "ok, THIS is LOCATOR LOCATION".

On "it is":
	the THIS is;
	reply "ok, it is LOCATOR LOCATION".

On "the PHRASE-THESE are":
	perform "expand the {THESE} is";
	reply "ok, THESE are LOCATOR LOCATION".
	
On "they are":
	the THESE are;
	reply "ok, they are LOCATOR LOCATION".
	
### does not need... removals
On "SUBJECT does not need anything":
	#answering yes or no ask i am about to delete the needs list is this ok;
	#if not, reply "ok, let us leave things as they are";
	remove everything from SUBJECT needs list;
	reply "ok, SUBJECT does not need anything [LOCATOR LOCATION]".

On "SUBJECT does not need PHRASE-THESE":
	THESE exists in SUBJECT needs list;
	if not, reply "yes, i know";
	remove THESE from SUBJECT needs list;
	if not, reply "ok, SUBJECT does not need THESE";
	reply "ok, SUBJECT does not need ...".

On "SUBJECT does not need NUMERIC-QUANTITY PHRASE-THIS":
	THIS exists in SUBJECT needs list;
	if not, reply "yes, i know";
	remove QUANTITY THIS from SUBJECT needs list;
	if not, reply "i'm sorry, SUBJECT does not need QUANTITY THIS";
	reply "ok, SUBJECT does not need ...".

On "SUBJECT does not need NUMERIC-QUANTITY UNIT of PHRASE-THIS":
	THIS exists in SUBJECT needs list;
	if not, reply "yes, i know";
	remove QUANTITY UNIT of THIS from SUBJECT needs list;
	if not, reply "i'm sorry, SUBJECT does not need QUANTITY UNIT of THIS";
	reply "ok, SUBJECT does not need ...".

On "SUBJECT does not need any PHRASE-THIS":
	THIS exists in SUBJECT needs list;
	if not, reply "yes, i know";
	remove any THIS from SUBJECT needs list;
	if not, reply "i'm sorry, SUBJECT does not need any THIS";
	reply "ok, SUBJECT does not need any THIS".

### does X need .../how many
On "what does SUBJECT need":
	get SUBJECT needs list;
	if not, reply "SUBJECT does not need anything";
	reply "SUBJECT needs ...".

On "does SUBJECT need PHRASE-THIS":
	perform "items exists SUBJECT needs THIS";
	if not, reply "no, SUBJECT does not need THIS";
	reply "yes, SUBJECT needs THIS".

On "does SUBJECT need NUMERIC-QUANTITY PHRASE-THIS":
	perform "items exists SUBJECT needs THIS QUANTITY";
	if not, reply "no, SUBJECT does not need QUANTITY THIS";
	reply "yes, SUBJECT needs QUANTITY THIS".

On "does SUBJECT need NUMERIC-QUANTITY UNIT of PHRASE-THIS":
	perform "items exists SUBJECT needs THIS QUANTITY UNIT";
	if not, reply "no, SUBJECT does not need QUANTITY UNIT of THIS";
	reply "yes, SUBJECT needs QUANTITY UNIT of THIS".

On "how many UNIT of PHRASE-THIS does SUBJECT need":
	perform "items exists SUBJECT needs THIS";
	if not, reply "SUBJECT does not need THIS";
	how many UNIT of THIS in SUBJECT needs list;
	reply "..., SUBJECT needs ... UNIT of THIS".

On "how many PHRASE-THIS does SUBJECT need":
	perform "items exists SUBJECT needs THIS";
	if not, reply "SUBJECT does not need THIS";
	how many THIS in SUBJECT needs list;
	reply "..., SUBJECT needs ... THIS".

#########################################
# First person utterances => third-person
#########################################
On "_user    needs        NUMERIC-QUANTITY", _user needs QUANTITY THIS.
On "i        need         PHRASE-THESE", _user needs THESE.
On "i        need         nothing",      _user does not need anything.

On "i do not need         PHRASE-THIS", _user does not need THIS.
On "i do not need any     PHRASE-THIS", _user does not need any THIS.
On "i        need anything",            _user does not need anything.
On "i do not need anything",            _user does not need anything.

On "i        need to      PHRASE-THIS", _user needs to THIS.
On "i        need to get  PHRASE-THIS", _user needs THIS.
On "i do not need to get  PHRASE-THIS", _user does not need THIS.

On "what  do   i   need",            what does _user need.
On "do i need PHRASE-THIS",          does _user need THIS.
On "how many PHRASE-THIS do i need", how many THIS does _user need.

########################
# we => i, a fix for now
########################
On "we need PHRASE-THIS",         i need THIS.
On "what do we need",             what do i need.
On "do we need PHRASE-THESE",     do i need THESE.
On "we do not need PHRASE-THESE", i do not need THESE.
On "we do not need anything",     i do not need anything.
On "we do nothing",               i need nothing.
