####################################################
### Concept: X needs Y
####################################################

This concept is spatial.
When host says "_user needs"         host means "you need".
When host says "_user does not need" host means "you do not need".

###############################################################################
# Multiple singular additions
On "SUBJECT needs AND-LIST-OBJECTS": #a cup of coffee and some biscuits
	perform "expand SUBJECT needs { OBJECTS }";
	if not, reply "i do not understand";
	reply "ok, SUBJECT needs OBJECTS".

###############################################################################
# GROUP additions - singular group
# martin and ruth need a coffee and a tea
On "AND-LIST-SUBJECTS need PHRASE-OBJECTS":
	GROUPED-SUBJECTS needs OBJECTS;
	reply "ok, SUBJECTS need OBJECTS".

On "what do AND-LIST-SUBJECTS need":
	set output format to "QUANTITY,UNIT of,OBJECT,LOCATOR LOCATION";
	get GROUPED-SUBJECTS needs list;
	if not, reply "SUBJECTS do not need anything";
	reply "SUBJECTS need ...".

On "AND-LIST-SUBJECTS do not need PHRASE-OBJECTS":
	OBJECTS exists in GROUPED-SUBJECTS needs list;
	if not, reply "yes, i know";
	remove OBJECTS from GROUPED-SUBJECTS needs list;
	reply "ok, SUBJECTS do not need ...".

On "AND-LIST-SUBJECTS do not need anything":
	remove everything from GROUPED-SUBJECTS needs list;
	reply "ok, SUBJECTS do not need anything [LOCATOR LOCATION]".

###############################################################################
# Combinations - multiple single subjects, phrased objects
# martin and james and ruth all need a coffee and a tea.
On "AND-LIST-SUBJECTS all need PHRASE-OBJECTS":
	perform "expand { SUBJECTS } needs OBJECTS";
	if not, reply "i do not understand";
	reply "ok, SUBJECTS all need OBJECTS".

# martin and ruth both need a coffee and a tea.
On "AND-LIST-SUBJECTS both need PHRASE-OBJECTS":
	SUBJECTS all need OBJECTS;
	reply "ok, SUBJECTS both need OBJECTS".

###############################################################################
# Various singular additions
On "SUBJECT needs PHRASE-OBJECTS":
	set output format to "QUANTITY,UNIT of,OBJECT,LOCATOR LOCATION";
	OBJECTS exists in SUBJECT needs list;
	reply "yes, i know";
	if not, add OBJECTS to SUBJECT needs list;
	if not, append OBJECTS onto SUBJECT needs list;
	reply "ok, SUBJECT needs ...".

On "SUBJECT needs NUMERIC-QUANTITY PHRASE-OBJECT":
	set output format to "QUANTITY,UNIT of,OBJECT,LOCATOR LOCATION";
	QUANTITY OBJECT exists in SUBJECT needs list;
	reply "yes, i know";
	if not, add QUANTITY OBJECT to SUBJECT needs list;
	reply "ok, SUBJECT needs ... ".

On "SUBJECT needs NUMERIC-QUANTITY UNIT of PHRASE-OBJECT":
	set output format to "QUANTITY,UNIT of,OBJECT,LOCATOR LOCATION";
	QUANTITY UNIT of OBJECT exists in SUBJECT needs list;
	reply "yes, i know";
	if not, add QUANTITY UNIT of OBJECT to SUBJECT needs list;
	reply "ok, SUBJECT needs ...".

## Elaboration of subsequent utterances
On "and NUMERIC-QUANTITY":
	set output format to "QUANTITY,UNIT of,OBJECT,LOCATOR LOCATION";
	SUBJECT needs QUANTITY OBJECT;
	reply "ok, SUBJECT needs ...".

On "and NUMERIC-QUANTITY OBJECT":
	set output format to "QUANTITY,UNIT of,OBJECT,LOCATOR LOCATION";
	SUBJECT needs QUANTITY OBJECT;
	reply "ok, SUBJECT needs ...".

On "and NUMERIC-QUANTITY UNITS of PHRASE-OBJECT":
	set output format to "QUANTITY,UNIT of,OBJECT,LOCATOR LOCATION";
	SUBJECT needs QUANTITY UNITS of OBJECT;
	reply "ok, SUBJECT needs ...".

###### Pronoun ancillaries - it is/they are from X #######
On "the PHRASE-OBJECT is": #  LOCATOR LOCATION are implied anyway!
	perform "items update SUBJECT needs OBJECT";
	reply "ok, OBJECT is LOCATOR LOCATION".

On "it is":
	the OBJECT is;
	reply "ok, it is LOCATOR LOCATION".

On "the PHRASE-OBJECTS are":
	perform "expand the {OBJECTS} is";
	reply "ok, OBJECTS are LOCATOR LOCATION".
	
On "they are":
	the OBJECTS are;
	reply "ok, they are LOCATOR LOCATION".
	
### does not need... removals
On "SUBJECT does not need anything":
	#answering yes or no ask i am about to delete the needs list is this ok;
	#if not, reply "ok, let us leave things as they are";
	remove everything from SUBJECT needs list;
	reply "ok, SUBJECT does not need anything [LOCATOR LOCATION]".

On "SUBJECT does not need PHRASE-OBJECTS":
	OBJECTS exists in SUBJECT needs list;
	if not, reply "yes, i know";
	remove OBJECTS from SUBJECT needs list;
	if not, reply "ok, SUBJECT does not need OBJECTS";
	reply "ok, SUBJECT does not need ...".

On "SUBJECT does not need NUMERIC-QUANTITY PHRASE-OBJECT":
	OBJECT exists in SUBJECT needs list;
	if not, reply "yes, i know";
	remove QUANTITY OBJECT from SUBJECT needs list;
	if not, reply "i'm sorry, SUBJECT does not need QUANTITY OBJECT";
	reply "ok, SUBJECT does not need ...".

On "SUBJECT does not need NUMERIC-QUANTITY UNIT of PHRASE-OBJECT":
	OBJECT exists in SUBJECT needs list;
	if not, reply "yes, i know";
	remove QUANTITY UNIT of OBJECT from SUBJECT needs list;
	if not, reply "i'm sorry, SUBJECT does not need QUANTITY UNIT of OBJECT";
	reply "ok, SUBJECT does not need ...".

On "SUBJECT does not need any PHRASE-OBJECT":
	OBJECT exists in SUBJECT needs list;
	if not, reply "yes, i know";
	remove any OBJECT from SUBJECT needs list;
	if not, reply "i'm sorry, SUBJECT does not need any OBJECT";
	reply "ok, SUBJECT does not need any OBJECT".

### does X need .../how many
On "what does SUBJECT need":
	set output format to "QUANTITY,UNIT of,OBJECT,LOCATOR LOCATION";
	get SUBJECT needs list;
	if not, reply "SUBJECT does not need anything";
	reply "SUBJECT needs ...".

On "does SUBJECT need PHRASE-OBJECT":
	perform "items exists SUBJECT needs OBJECT";
	if not, reply "no, SUBJECT does not need OBJECT";
	reply "yes, SUBJECT needs OBJECT".

On "does SUBJECT need NUMERIC-QUANTITY PHRASE-OBJECT":
	perform "items exists SUBJECT needs OBJECT QUANTITY";
	if not, reply "no, SUBJECT does not need QUANTITY OBJECT";
	reply "yes, SUBJECT needs QUANTITY OBJECT".

On "does SUBJECT need NUMERIC-QUANTITY UNIT of PHRASE-OBJECT":
	perform "items exists SUBJECT needs OBJECT QUANTITY UNIT";
	if not, reply "no, SUBJECT does not need QUANTITY UNIT of OBJECT";
	reply "yes, SUBJECT needs QUANTITY UNIT of OBJECT".

On "how many UNIT of PHRASE-OBJECT does SUBJECT need":
	perform "items exists SUBJECT needs OBJECT";
	if not, reply "SUBJECT does not need OBJECT";
	how many UNIT of OBJECT in SUBJECT needs list;
	reply "..., SUBJECT needs ... UNIT of OBJECT".

On "how many PHRASE-OBJECT does SUBJECT need":
	perform "items exists SUBJECT needs OBJECT";
	if not, reply "SUBJECT does not need OBJECT";
	how many OBJECT in SUBJECT needs list;
	reply "..., SUBJECT needs ... OBJECT".

######################################
# First person utterances
######################################
On "_user    needs       NUMERIC-QUANTITY", _user needs QUANTITY OBJECT.

On "i        need        PHRASE-OBJECTS", _user needs OBJECTS.
#On "help", reply "to add items to the list".

On "i        need        help", help.

On "i        need to      PHRASE-OBJECT", _user needs to OBJECT.
On "i        need to get  PHRASE-OBJECT", _user needs OBJECT.
On "i do not need to get  PHRASE-OBJECT", _user does not need OBJECT.

On "i do not need         PHRASE-OBJECT", _user does not need OBJECT.
On "i do not need any     PHRASE-OBJECT", _user does not need any OBJECT.
On "i do not need anything",              _user does not need anything.
#On "help", reply "to clear the list".

On "what  do   i   need", what does _user need.
#On "help", reply "to find out what is on the list".

On "do i need PHRASE-OBJECT", does _user need OBJECT.
On "how many PHRASE-OBJECT do i need", how many OBJECT does _user need.
#On "help", reply "to find out if something specific is on the list".

On "we need PHRASE-OBJECT", i need OBJECT. # a fix for now
On "what do we need", what do i need.
On "do we need PHRASE-OBJECTS", do i need OBJECTS.
On "we do not need PHRASE-OBJECTS", do i need OBJECTS.
On "we do not need anything", i do not need anything.
