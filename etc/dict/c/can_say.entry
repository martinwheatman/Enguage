On "one can say PHRASE-UTTERANCE": # should be a phrase!
	perform "sign create UTTERANCE";
	reply "ok, one can say UTTERANCE".

On "i can say PHRASE-UTTERANCE", one can say UTTERANCE.
On "you can say PHRASE-UTTERANCE", one can say UTTERANCE.

On "to this one replies PHRASE-UTTERANCE":
	perform "sign reply ok UTTERANCE";
	reply "ok, to this one replies UTTERANCE".

On "to which i   reply   PHRASE-UTTERANCE", to this one replies UTTERANCE.
On "to which we  reply   PHRASE-UTTERANCE", to this one replies UTTERANCE.
On "to which you reply   PHRASE-UTTERANCE", to this one replies UTTERANCE.
On "to which one replies PHRASE-UTTERANCE", to this one replies UTTERANCE.

On "this is temporal", perform "sign temporal".


#]	i can say  someone is the something:
#]		ok, one can say someone is the something.

#]	where that someone is a value         : ok, someone is a value.
#]	and where that something is a phrase  : ok, something is a phrase.

#]	this implies is that someone a person : ok, is that someone a person.
#]	then if not reply sorry that someone is not a person:
#]		ok, reply sorry that someone is not a person.

## put in 'run'...
#]	then run variable set that someone that something : ok, run variable set that someone that something.

# ...now retract 'run', and put in 'perform'.
#]	no then perform variable set that someone that something:
#]		ok, perform variable set that someone that something.
#]	then reply ok dokey                    : ok, reply ok dokey.

#]	show this sign.

## now test this.
#]	martin is the best : sorry, martin is not a person.
#]	martin is a person : ok, martin is a person.
#]	martin is the best : ok, dokey.

## what does martin is a person imply: ok.
## save this   : ok.
## forget this : ok.
## delete this : ok.

#delete the concept OTF.                      # language/delete_the_concept-.txt
#show this sign : sorry, nothing to see here. # audit/show.txt
