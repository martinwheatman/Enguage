#!/bin/bash
# csv sets/gets values in a csv file
# csv <row> <col> <file> [<value>]

if [ $# -lt 3 ]; then
	echo "Usage: csv <rowN> <colM> <n/a/m/e> [<value>]" >&2
	exit
fi

op="get"
if [ $# -eq 4 ]; then
	op="set"
fi

row=$1; shift
if echo $row | grep ^[0-9]+$ ; then
   echo "error: Row ($row) is not a number" >&2
   exit 1 
fi
clmn=$1; shift
if echo $clmn | grep ^[0-9]+$ ; then
   echo "error: Column is not a number" >&2
   exit 1 
fi

file=$1; shift
touch $file
rows=$(wc -l $file|cut -f1 -d\ )

value="$*"

maxfields() { # $1=fname
	awk -F, 'BEGIN {max=0} {if (NF > max) max=NF} END {print max}' $1
}
levelUpFields() { # $1=fname
	awk -F, 'BEGIN {sup=",,,,,,,,,,,,,,,,,,,"} 
	        {printf "%s%*.*s\n", $0, count - NF, count - NF, sup}' \
	        count=$(maxfields $1) $1
}
nlines() {
	if [ $1 -gt 0 ]; then
		echo ","
		nlines $(($1 - 1))
	fi
}

nfields() {
	if [ $1 -le 0 ]; then
		echo ""
	else
		echo -n ",$(nfields $(($1 - 1)))"
	fi
}
newLine() {
	val=$1; shift
	index=$1; shift
	fields=$(echo $@ | tr ',' '\n'| wc -l)

	if [ $fields -lt $index ]; then # extend line
		line="$*$(nfields $(($index - $fields)))"
		fields=$index
	fi
	
	before=""
	if [ $index -eq $fields ]; then
		before="$line"
	elif [ $index -gt 1 ]; then
		before=$(echo $* | cut -f-$(($index - 1)) -d,),
	fi

	after=""
	if [ $index -lt $fields ]; then
		after=,$(echo $* | cut -f$(($index + 1))- -d,)
	fi

	printf "%s%s%s\n" "$before" "$val" "$after"
}


if [ "$op" == "get" ]; then
	head -$row $file | tail -1 | cut -f$clmn -d,
else
	# grow the file first, if required...
	if [ $row -gt $rows ]; then
		nlines $(($row - $rows )) >> $file
		rows=$row
	fi

	# create new file
	head -$(($row-1)) $file > $file.new

	newLine $value $clmn $(head -$row $file | tail -1) >> $file.new
	
	tail -$(($rows - $row)) $file >> $file.new
	
	mv $file.new $file
	# then level-up
	levelUpFields $file > $file.new
	mv $file.new $file
fi
